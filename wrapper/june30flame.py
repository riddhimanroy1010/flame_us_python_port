# -*- coding: utf-8 -*-
"""June30FLAME.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kpqppbRUBhCixh0nwXZS22Xqh2oRpKdd
"""

pip install pyreadr

pip install rdata

#need to import the libraries I will use 
import numpy as np
import pandas as pd
from pandas import Series, DataFrame
import matplotlib.pyplot as plt
import seaborn as sns
import pyreadr
from rpy2.robjects import r
import rpy2.robjects.pandas2ri as pandas2ri
import rdata

from google.colab import files
uploaded = files.upload()

from google.colab import files
uploaded = files.upload()

from google.colab import files
uploaded = files.upload()

print(type(uploaded))
print(uploaded)

parsed = rdata.parser.parse_file(rdata.TESTDATA_PATH / "/content/scen_fleet_vint_stock_f_All Tech Same Vkt.RData")
converted = rdata.conversion.convert(parsed)

parsed2 = rdata.parser.parse_file(rdata.TESTDATA_PATH / "/content/scen_fleet_vkt_f_All Tech Same Vkt.RData")
converted2 = rdata.conversion.convert(parsed2)

parsed3 = rdata.parser.parse_file(rdata.TESTDATA_PATH / "/content/scen_fleet_gwp_f_All Tech Same Vkt.RData")
converted3 = rdata.conversion.convert(parsed3)

print(converted)

print(converted2)

print(converted3)

#for stock
print(type(converted))
print("#################")
dt = pd.DataFrame.from_dict(converted)
scenarios_stock = {}
print(converted['results_l'][0].keys())
for num in range(len(converted['results_l'])):
  print(num)
  print("###############")
  for keys in converted['results_l'][num].keys():
    print("**************")
    if keys == 'fleet_vint_stock':
      print(converted['results_l'][num]["Scenario"])
      print(keys, type(converted['results_l'][num][keys]))
      dt = converted['results_l'][num][keys]
      #print(dt)
      scenarios_stock[converted['results_l'][num]["Scenario"][0]] = dt
      #smaller_dt = dt.loc[(dt["Size"] == 'Car') & (dt["Technology"] == "ICEV-G")]["Value"]
      #years = dt.loc[(dt["Size"] == 'Car') & (dt["Technology"] == "ICEV-G")]["Year"]
      #print(years,smaller_dt)
      #plt.plot(years, smaller_dt)
    print("**************")

  print("#############")
print(scenarios_stock)

#for vkt
print(type(converted2))
print("#################")
dt = pd.DataFrame.from_dict(converted2)
scenarios = {}
print(converted2['results_l'][0].keys())
for num in range(len(converted2['results_l'])):
  print(num)
  print("###############")
  for keys in converted2['results_l'][num].keys():
    print("**************")
    if keys == 'fleet_vkt':
      print(converted2['results_l'][num]["Scenario"])
      print(keys, type(converted2['results_l'][num][keys]))
      dt = converted2['results_l'][num][keys]
      #print(dt)
      scenarios[converted2['results_l'][num]["Scenario"][0]] = dt
      #smaller_dt = dt.loc[(dt["Size"] == 'Car') & (dt["Technology"] == "ICEV-G")]["Value"]
      #years = dt.loc[(dt["Size"] == 'Car') & (dt["Technology"] == "ICEV-G")]["Year"]
      #print(years,smaller_dt)
      #plt.plot(years, smaller_dt)
    print("**************")

  print("#############")
print(scenarios)

#for gwp
print(type(converted3))
print("#################")
dt = pd.DataFrame.from_dict(converted3)
scenarios_gwp = {}
print(converted3['results_l'][0].keys())
for num in range(len(converted3['results_l'])):
  print(num)
  print("###############")
  for keys in converted3['results_l'][num].keys():
    print("**************")
    if keys == 'fleet_gwp':
      print(converted3['results_l'][num]["Scenario"])
      print(keys, type(converted3['results_l'][num][keys]))
      dt = converted3['results_l'][num][keys]
      #print(dt)
      scenarios_gwp[converted3['results_l'][num]["Scenario"][0]] = dt
      #smaller_dt = dt.loc[(dt["Size"] == 'Car') & (dt["Technology"] == "ICEV-G")]["Value"]
      #years = dt.loc[(dt["Size"] == 'Car') & (dt["Technology"] == "ICEV-G")]["Year"]
      #print(years,smaller_dt)
      #plt.plot(years, smaller_dt)
    print("**************")

  print("#############")
print(scenarios_gwp)

#need to groupby year for each vkt
base_case_vkt = scenarios["3"].copy()
twenty_year_vkt= scenarios["6"].copy()
fifteen_year_vkt= scenarios["7"].copy()
ten_year_vkt= scenarios["8"].copy()
five_year_vkt= scenarios["9"].copy()

basecase_vkt_byyear = base_case_vkt.groupby(['Year'])['Value'].sum().reset_index()
twenty_year_vkt_byyear = twenty_year_vkt.groupby(['Year'])['Value'].sum().reset_index()
fifteen_year_vkt_byyear = fifteen_year_vkt.groupby(['Year'])['Value'].sum().reset_index()
ten_year_vkt_byyear = ten_year_vkt.groupby(['Year'])['Value'].sum().reset_index()
five_year_vkt_byyear = five_year_vkt.groupby(['Year'])['Value'].sum().reset_index()

basecase_vkt_byyear['20 Year Cut_Off'] = twenty_year_vkt_byyear['Value']
basecase_vkt_byyear['15 Year Cut_Off'] = fifteen_year_vkt_byyear['Value']
basecase_vkt_byyear['10 Year Cut_Off'] = ten_year_vkt_byyear['Value']
basecase_vkt_byyear['5 Year Cut_Off'] = five_year_vkt_byyear['Value']

basecase_vkt_byyear_toplot = basecase_vkt_byyear.set_index('Year')

plt.rcParams['xtick.labelsize'] = 18
plt.rcParams['ytick.labelsize'] = 18
fig = plt.figure(figsize=(20,10))
plt.plot(basecase_vkt_byyear_toplot.index , basecase_vkt_byyear_toplot, '-o')
plt.xlabel('Year', fontsize=18)
plt.ylabel('Total VKT (km)', fontsize=16)
plt.legend(basecase_vkt_byyear_toplot.columns, loc='best', ncol=3)

#need to groupby year for each gwp
#kg co2e
base_case_gwp = scenarios_gwp["3"].copy()
twenty_year_gwp= scenarios_gwp["6"].copy()
fifteen_year_gwp= scenarios_gwp["7"].copy()
ten_year_gwp= scenarios_gwp["8"].copy()
five_year_gwp= scenarios_gwp["9"].copy()

basecase_gwp_byyear = base_case_gwp.groupby(['Year'])['Value'].sum().reset_index()
twenty_year_gwp_byyear = twenty_year_gwp.groupby(['Year'])['Value'].sum().reset_index()
fifteen_year_gwp_byyear = fifteen_year_gwp.groupby(['Year'])['Value'].sum().reset_index()
ten_year_gwp_byyear = ten_year_gwp.groupby(['Year'])['Value'].sum().reset_index()
five_year_gwp_byyear = five_year_gwp.groupby(['Year'])['Value'].sum().reset_index()

basecase_gwp_byyear['20 Year Cut_Off'] = twenty_year_gwp_byyear['Value']
basecase_gwp_byyear['15 Year Cut_Off'] = fifteen_year_gwp_byyear['Value']
basecase_gwp_byyear['10 Year Cut_Off'] = ten_year_gwp_byyear['Value']
basecase_gwp_byyear['5 Year Cut_Off'] = five_year_gwp_byyear['Value']

basecase_gwp_byyear_toplot = basecase_gwp_byyear.set_index('Year')

plt.rcParams['xtick.labelsize'] = 18
plt.rcParams['ytick.labelsize'] = 18
fig = plt.figure(figsize=(20,10))
plt.plot(basecase_gwp_byyear_toplot.index , basecase_gwp_byyear_toplot, '-o')
plt.xlabel('Year', fontsize=18)
plt.ylabel('Total GHG Emissions (kg C02e)', fontsize=16)
plt.legend(basecase_gwp_byyear_toplot.columns, loc='best', ncol=3)

#a little more complicated for stock
#units are number of cars
#first will do total number of cars
base_case_stock = scenarios_stock["3"].copy()
twenty_year_stock= scenarios_stock["6"].copy()
fifteen_year_stock= scenarios_stock["7"].copy()
ten_year_stock= scenarios_stock["8"].copy()
five_year_stock= scenarios_stock["9"].copy()

basecase_stock_byyear = base_case_stock.groupby(['Year'])['Value'].sum().reset_index()
twenty_year_stock_byyear = twenty_year_stock.groupby(['Year'])['Value'].sum().reset_index()
fifteen_year_stock_byyear = fifteen_year_stock.groupby(['Year'])['Value'].sum().reset_index()
ten_year_stock_byyear = ten_year_stock.groupby(['Year'])['Value'].sum().reset_index()
five_year_stock_byyear = five_year_stock.groupby(['Year'])['Value'].sum().reset_index()

basecase_stock_byyear['20 Year Cut_Off'] = twenty_year_stock_byyear['Value']
basecase_stock_byyear['15 Year Cut_Off'] = fifteen_year_stock_byyear['Value']
basecase_stock_byyear['10 Year Cut_Off'] = ten_year_stock_byyear['Value']
basecase_stock_byyear['5 Year Cut_Off'] = five_year_stock_byyear['Value']

basecase_stock_byyear_toplot = basecase_stock_byyear.set_index('Year')

plt.rcParams['xtick.labelsize'] = 18
plt.rcParams['ytick.labelsize'] = 18
fig = plt.figure(figsize=(20,10))
plt.plot(basecase_stock_byyear_toplot.index , basecase_stock_byyear_toplot, '-o')
plt.xlabel('Year', fontsize=18)
plt.ylabel('Total Number of Cars', fontsize=16)
plt.legend(basecase_stock_byyear_toplot.columns, loc='best', ncol=3)

#total number of EVS
base_case_stock2 = scenarios_stock["3"].copy()
twenty_year_stock2= scenarios_stock["6"].copy()
fifteen_year_stock2= scenarios_stock["7"].copy()
ten_year_stock2= scenarios_stock["8"].copy()
five_year_stock2= scenarios_stock["9"].copy()

basecase_stock_byyear2 = base_case_stock2.groupby(['Year','Technology'])['Value'].sum().reset_index()
basecase_stock_byyear2=basecase_stock_byyear2.pivot_table(values='Value', index='Year', columns='Technology', aggfunc=sum)

twenty_year_stock_byyear2 = twenty_year_stock2.groupby(['Year','Technology'])['Value'].sum().reset_index()
twenty_year_stock_byyear2=twenty_year_stock_byyear2.pivot_table(values='Value', index='Year', columns='Technology', aggfunc=sum)

fifteen_year_stock2 = fifteen_year_stock2.groupby(['Year','Technology'])['Value'].sum().reset_index()
fifteen_year_stock2=fifteen_year_stock2.pivot_table(values='Value', index='Year', columns='Technology', aggfunc=sum)

ten_year_stock_byyear2 = ten_year_stock2.groupby(['Year','Technology'])['Value'].sum().reset_index()
ten_year_stock_byyear2=ten_year_stock_byyear2.pivot_table(values='Value', index='Year', columns='Technology', aggfunc=sum)

five_year_stock_byyear2 = five_year_stock2.groupby(['Year','Technology'])['Value'].sum().reset_index()
five_year_stock_byyear2 =five_year_stock_byyear2.pivot_table(values='Value', index='Year', columns='Technology', aggfunc=sum)

basecase_stock_byyear2

plt.rcParams['xtick.labelsize'] = 12
plt.rcParams['ytick.labelsize'] = 12
fig = plt.figure(figsize=(20,20))

# using subplot function and creating plot one
plt.subplot(3, 2, 1)  # row 3, column 2, count 1
plt.plot(basecase_stock_byyear2.index, basecase_stock_byyear2, '-')
plt.title('Base Case')
plt.xlabel('Year')
plt.ylabel('Number of Cars')
plt.legend(basecase_stock_byyear2.columns, loc='best', ncol=3)

plt.subplot(3, 2, 2)  # row 3, column 2, count 1
plt.plot(twenty_year_stock_byyear2.index,twenty_year_stock_byyear2, '-')
plt.title('20 Year Cutoff')
plt.xlabel('Year')
plt.ylabel('Number of Cars')
plt.legend(five_year_stock_byyear2.columns, loc='best', ncol=3)

plt.subplot(3, 2, 3)  # row 3, column 2, count 1
plt.plot(fifteen_year_stock2.index, fifteen_year_stock2, '-')
plt.title('15 Year Cutoff')
plt.xlabel('Year')
plt.ylabel('Number of Cars')
plt.legend(five_year_stock_byyear2.columns, loc='best', ncol=3)

plt.subplot(3, 2, 4)  # row 3, column 2, count 1
plt.plot(ten_year_stock_byyear2.index, ten_year_stock_byyear2, '-')
plt.title('10 Year Cutoff')
plt.xlabel('Year')
plt.ylabel('Number of Cars')
plt.legend(five_year_stock_byyear2.columns, loc='best', ncol=3)

plt.subplot(3, 2, 5)  # row 3, column 2, count 1
plt.plot(five_year_stock_byyear2.index, five_year_stock_byyear2, '-')
plt.title('Five Year Cutoff')
plt.xlabel('Year')
plt.ylabel('Number of Cars')
plt.legend(five_year_stock_byyear2.columns, loc='best', ncol=3)

#total number of gasoline vehicles